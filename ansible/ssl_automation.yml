---
- hosts: 127.0.0.1
  gather_facts: true
  vars:
    # EPEL Repo details | Only for CentOS
    epel_repo_url: ${epel_repo_url}
    epel_repo_gpg_key_url: ${epel_repo_gpg_key_url}
    epel_repofile_path: ${epel_repofile_path}
    ssl_admin_email: ${ssl_admin_email}
    # General settings | VPN Domain
    openvpn_server_domain: ${openvpn_dns_name}
    hostname: ${ec2_hostname}
    s3_bucket: ${s3_bucket}
  tasks:
    - name: Cerbot | Check if EPEL repo is already configured.
      stat: path={{ epel_repofile_path }}

    - name: Cerbot | Install EPEL repo.
      yum:
        name: "{{ epel_repo_url }}"
        state: present

    - name: Cerbot | Import EPEL GPG key.
      rpm_key:
        key: "{{ epel_repo_gpg_key_url }}"
        state: present
      register: epel_repo

    - name: Cerbot | Install Cerbot
      yum:
        name: certbot
        state: present
      when: epel_repo.changed

    - name: Certbot | Stop VPN service
      systemd:
        name: openvpnas
        state: stopped

    - name: Certbot | Check if the certs exists in S3
      shell: aws s3 ls s3://{{ s3_bucket }}/certs/{{ openvpn_server_domain }}/ | wc -l
      register: fileCount

    - set_fact:
        s3fileCount: "{{ fileCount.stdout_lines|length }}"

    - name: Create certificate path
      file:
        path: /etc/letsencrypt/live/{{ openvpn_server_domain }}/
        state: directory
        mode: '0755'
        recurse: yes
      when: fileCount|length > 3

    - name: Certbot | Download S3 certificate files
      command: aws s3 cp s3://{{ s3_bucket }}/certs/{{ openvpn_server_domain }}/cert.pem /etc/letsencrypt/live/{{ openvpn_server_domain }}/cert.pem
      when: fileCount|length > 3

    - name: Certbot | Download S3 certificate files
      command: aws s3 cp s3://{{ s3_bucket }}/certs/{{ openvpn_server_domain }}/chain.pem /etc/letsencrypt/live/{{ openvpn_server_domain }}/chain.pem
      when: fileCount|length > 3

    - name: Certbot | Download S3 certificate files
      command: aws s3 cp s3://{{ s3_bucket }}/certs/{{ openvpn_server_domain }}/fullchain.pem /etc/letsencrypt/live/{{ openvpn_server_domain }}/fullchain.pem
      when: fileCount|length > 3

    - name: Certbot | Download S3 certificate files
      command: aws s3 cp s3://{{ s3_bucket }}/certs/{{ openvpn_server_domain }}/privkey.pem /etc/letsencrypt/live/{{ openvpn_server_domain }}/privkey.pem
      when: fileCount|length > 3
      
    - name: Cerbot | Request certificate
      command: certbot certonly --standalone -d {{ openvpn_server_domain }} --email {{ ssl_admin_email }} --agree-tos --non-interactive
      register: certificate_request
      when: s3fileCount|length == 0

    - name: Certbot | Start VPN service
      systemd:
        name: openvpnas
        state: restarted
      when: certificate_request.changed

    - name: Rename certificate directory
      command: mv vpn-* vpn-test.eks.33n.co.uk
      args:
       chdir: /etc/letsencrypt/live
       creates: /etc/letsencrypt/live/vpn-test.eks.33n.co.uk
      register: certificate_dir

    - name: Cerbot | Upload ca_bundle
      command: /usr/local/openvpn_as/scripts/confdba -mk cs.ca_bundle -v "/etc/letsencrypt/live/{{ openvpn_server_domain }}/fullchain.pem"
      when: certificate_dir.changed

    - name: Cerbot | Upload priv_key
      command: /usr/local/openvpn_as/scripts/confdba -mk cs.priv_key -v "/etc/letsencrypt/live/{{ openvpn_server_domain }}/privkey.pem"
      when: certificate_dir.changed

    - name: Certbot | Upload certificate
      command: /usr/local/openvpn_as/scripts/confdba -mk cs.cert -v "/etc/letsencrypt/live/{{ openvpn_server_domain }}/cert.pem"
      when: certificate_dir.changed

    - name: Certbot | Upload certs to S3
      shell: "cd /etc/letsencrypt/live/{{ openvpn_server_domain }} && aws s3 cp {{ item }} s3://{{ s3_bucket }}/certs/{{ openvpn_server_domain }}/{{ item }}"
      with_items:
        - cert.pem
        - chain.pem
        - fullchain.pem
        - privkey.pem
      when: certificate_dir.changed

    - name: Certbot | Restart VPN service
      systemd:
        name: openvpnas
        state: restarted